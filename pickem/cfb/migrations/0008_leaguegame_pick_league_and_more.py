# Generated by Django 5.2.6 on 2025-10-01 02:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


def assign_picks_to_spartans_league(apps, schema_editor):
    """Assign all existing picks to the 'Spartans' league"""
    Pick = apps.get_model('cfb', 'Pick')
    League = apps.get_model('cfb', 'League')
    
    # Get or create the Spartans league
    try:
        spartans_league = League.objects.get(name='Spartans')
    except League.DoesNotExist:
        # If for some reason it doesn't exist, get the first available league
        # or you could create a default one here
        spartans_league = League.objects.first()
        if not spartans_league:
            # No leagues exist, skip (shouldn't happen but safety first)
            return
    
    # Assign all existing picks to the Spartans league
    Pick.objects.filter(league__isnull=True).update(league=spartans_league)


class Migration(migrations.Migration):

    dependencies = [
        ('cfb', '0007_league_leaguemembership'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # Create LeagueGame model
        migrations.CreateModel(
            name='LeagueGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locked_home_spread', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('locked_away_spread', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('spread_locked_at', models.DateTimeField(blank=True, null=True)),
                ('selected_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='league_selections', to='cfb.game')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='league_games', to='cfb.league')),
            ],
            options={
                'ordering': ['game__kickoff'],
                'unique_together': {('league', 'game')},
            },
        ),
        
        # Add indexes for LeagueGame
        migrations.AddIndex(
            model_name='leaguegame',
            index=models.Index(fields=['league', 'game'], name='cfb_leagueg_league__idx'),
        ),
        
        # Remove old unique_together constraint from Pick
        migrations.AlterUniqueTogether(
            name='pick',
            unique_together=set(),
        ),
        
        # Add league field to Pick as nullable first
        migrations.AddField(
            model_name='pick',
            name='league',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='picks', to='cfb.league'),
        ),
        
        # Run data migration to assign existing picks to Spartans league
        migrations.RunPython(assign_picks_to_spartans_league, migrations.RunPython.noop),
        
        # Make league field non-nullable
        migrations.AlterField(
            model_name='pick',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='picks', to='cfb.league'),
        ),
        
        # Add new unique_together constraint
        migrations.AlterUniqueTogether(
            name='pick',
            unique_together={('league', 'game', 'user')},
        ),
        
        # Add indexes for Pick
        migrations.AddIndex(
            model_name='pick',
            index=models.Index(fields=['league', 'user'], name='cfb_pick_league__idx'),
        ),
        migrations.AddIndex(
            model_name='pick',
            index=models.Index(fields=['league', 'game'], name='cfb_pick_league__game_idx'),
        ),
    ]

