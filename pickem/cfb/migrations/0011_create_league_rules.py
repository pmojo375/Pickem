# Generated by Django 5.2.6 on 2025-10-01 02:57

import django.db.models.deletion
from django.db import migrations, models


def migrate_league_rules_to_season(apps, schema_editor):
    """Copy existing league rules to LeagueRules for the active season"""
    League = apps.get_model('cfb', 'League')
    Season = apps.get_model('cfb', 'Season')
    LeagueRules = apps.get_model('cfb', 'LeagueRules')
    
    # Get active season or create one for current year
    active_season = Season.objects.filter(is_active=True).first()
    if not active_season:
        from datetime import datetime
        current_year = datetime.now().year
        active_season = Season.objects.filter(year=current_year).first()
        if not active_season:
            active_season = Season.objects.create(year=current_year, is_active=True)
    
    # Migrate rules for each league
    for league in League.objects.all():
        LeagueRules.objects.create(
            league=league,
            season=active_season,
            points_per_correct_pick=league.points_per_correct_pick,
            key_pick_extra_points=league.key_pick_extra_points,
            spread_lock_weekday=league.spread_lock_weekday,
            pickable_games_per_week=league.pickable_games_per_week,
            picks_per_week=league.picks_per_week,
            key_picks_enabled=league.key_picks_enabled,
            number_of_key_picks=league.number_of_key_picks,
        )


class Migration(migrations.Migration):

    dependencies = [
        ('cfb', '0010_add_league_rules'),
    ]

    operations = [
        # First, create the LeagueRules model
        migrations.CreateModel(
            name='LeagueRules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_per_correct_pick', models.IntegerField(default=1, help_text='Points awarded for each correct pick')),
                ('key_pick_extra_points', models.IntegerField(default=1, help_text='Extra points for correct key picks')),
                ('spread_lock_weekday', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], default=2, help_text='Day of the week when spreads lock in place')),
                ('pickable_games_per_week', models.IntegerField(default=10, help_text='Maximum number of games available for picking each week')),
                ('picks_per_week', models.IntegerField(default=0, help_text='Number of picks required per week (0 = must pick all available games)')),
                ('key_picks_enabled', models.BooleanField(default=True, help_text='Allow users to designate key picks for bonus points')),
                ('number_of_key_picks', models.IntegerField(default=1, help_text='Number of key picks allowed per week')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='cfb.league')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='league_rules', to='cfb.season')),
            ],
            options={
                'verbose_name_plural': 'League rules',
                'ordering': ['-season__year'],
                'unique_together': {('league', 'season')},
            },
        ),
        # Migrate existing league rules to LeagueRules
        migrations.RunPython(migrate_league_rules_to_season, migrations.RunPython.noop),
        # Now remove the old fields from League
        migrations.RemoveField(
            model_name='league',
            name='key_pick_extra_points',
        ),
        migrations.RemoveField(
            model_name='league',
            name='key_picks_enabled',
        ),
        migrations.RemoveField(
            model_name='league',
            name='number_of_key_picks',
        ),
        migrations.RemoveField(
            model_name='league',
            name='pickable_games_per_week',
        ),
        migrations.RemoveField(
            model_name='league',
            name='picks_per_week',
        ),
        migrations.RemoveField(
            model_name='league',
            name='points_per_correct_pick',
        ),
        migrations.RemoveField(
            model_name='league',
            name='spread_lock_weekday',
        ),
    ]
